# EXAMPLE "local.cfg" for DSpace.
#
# Any configurations added to this file will automatically OVERRIDE configurations
# of the same name in any of the DSpace *.cfg files. This includes overriding
# settings in any of these files:
#    * [dspace]/config/dspace.cfg
#    * Any configuration file that is included in 'dspace.cfg'
#     (See "include = [filepath]" settings near the end of dspace.cfg.
#      By default, it includes all [dspace]/config/modules/*.cfg files)
#    * Spring Boot's application.properties
#      ([dspace-src]/dspace-server-webapp/src/main/resources/application.properties)
#
# By default, this EXAMPLE file includes a number of commonly overridden configurations.
# * ADD configurations by simply copying them into this file from any existing *.cfg file.
# * REMOVE configurations by simply commenting them out or deleting them below.
#
# Any commented out settings in this file are simply ignored. A configuration
# will only override another configuration if it has the EXACT SAME key/name.
# For example, including "dspace.dir" in this local.cfg will override the
# default value of "dspace.dir" in the dspace.cfg file.
# Similarly, including "oai.solr.url" in this local.cfg will override the
# default value of "oai.solr.url" in the modules/oai.cfg file.
#


##########################
# SERVER CONFIGURATION   #
##########################

# DSpace installation directory.
# This is the location where you want to install DSpace.
# Windows note: Please remember to use forward slashes for all paths (e.g. C:/dspace)
dspace.dir=/data/dspace

# Public URL of DSpace backend ('server' webapp). May require a port number if not using standard ports (80 or 443)
# DO NOT end it with '/'.
# This is where REST API and all enabled server modules (OAI-PMH, SWORD, SWORDv2, RDF, etc) will respond.
# NOTE: This URL must be accessible to all DSpace users (should not use 'localhost' in Production)
# and is usually "synced" with the "rest" section in the DSpace User Interface's config.*.yml.
# It corresponds to the URL that you would type into your browser to access the REST API.
dspace.server.url = https://pedsdspace01.research.chop.edu/server

# Public URL of DSpace frontend (Angular UI). May require a port number if not using standard ports (80 or 443)
# DO NOT end it with '/'.
# This is used by the backend to provide links in emails, RSS feeds, Sitemaps, etc.
# NOTE: this URL must be accessible to all DSpace users (should not use 'localhost' in Production).
# It corresponds to the URL that you would type into your browser to access the User Interface.
#dspace.ui.url=http://10.30.11.25:4000
dspace.ui.url = https://pedsdspace01.research.chop.edu

# Name of the site
dspace.name = PEDSpace

# CUSTOM PARAM ADDED BY ARTA SEYEDIAN:
#usage-statistics.dbfile = /opt/dbip-city-lite-2024-04.mmdb

# Assetstore configurations have moved to config/modules/assetstore.cfg
# and config/spring/api/bitstore.xml.
# Additional storage options (e.g. Amazon S3) are available in `assetstore.cfg`
# assetstore.dir = ${dspace.dir}/assetstore

# Default language for metadata values
#default.language = en_US

# Solr server/webapp.
# DSpace uses Solr for all search/browse capability (and for usage statistics).
# Since DSpace 7, SOLR must be installed as a stand-alone service
solr.server = http://localhost:8983/solr

# Solr core name prefix.
# If you connect multiple instances of DSpace to a single Solr instance, you
# can organize them with a common core name prefix.
#solr.multicorePrefix =

##########################
# DATABASE CONFIGURATION #
##########################
# DSpace ONLY supports PostgreSQL at this time.

# URL for connecting to database
db.url = jdbc:postgresql://localhost:5432/dspace

# JDBC Driver for PostgreSQL
db.driver = org.postgresql.Driver

# Database username and password
db.username = dspace
db.password = dspace

# Database Schema name
# For PostgreSQL, this is often "public" (default schema)
db.schema = public

## Connection pool parameters

# Maximum number of DB connections in pool (default = 30)
#db.maxconnections = 30

# Maximum time to wait before giving up if all connections in pool are busy (milliseconds)
# (default = 10000ms or 10 seconds)
#db.maxwait = 10000

# Maximum number of idle connections in pool (-1 = unlimited)
# (default = 10)
#db.maxidle = 10


#######################
# EMAIL CONFIGURATION #
#######################

# SMTP mail server (allows DSpace to send email notifications)
#mail.server = smtp.example.com

# SMTP mail server authentication username and password (if required)
#mail.server.username = myusername
#mail.server.password = mypassword

# SMTP mail server alternate port (defaults to 25)
#mail.server.port = 25

# From address for mail
# All mail from the DSpace site will use this 'from' address
#mail.from.address = dspace-noreply@myu.edu

# When feedback is submitted via the Feedback form, it is sent to this address
# Currently limited to one recipient!
#feedback.recipient = dspace-help@myu.edu

# General site administration (Webmaster) e-mail
#mail.admin = dspace-help@myu.edu

# Helpdesk E-mail
#mail.helpdesk = ${mail.admin}
#mail.helpdesk.name = Help Desk

# Recipient for server errors and alerts (defaults to mail.admin)
#alert.recipient = ${mail.admin}

# Recipient for new user registration emails (defaults to unspecified)
#registration.notify =


########################
# HANDLE CONFIGURATION #
########################
#
# Canonical Handle URL prefix
#
# Items in DSpace receive a unique URL, stored in dc.identifier.uri
# after it is generated during the submission process.
#
# If you register with CNRI's handle service at https://www.handle.net/,
# these links can be generated as permalinks using https://hdl.handle.net/
# as canonical prefix. Please make sure to change handle.canonical.prefix
# after registering with handle.net by uncommenting one of the following
# lines, depending if you prefer to use https or http:
# handle.canonical.prefix = https://hdl.handle.net/
# handle.canonical.prefix = http://hdl.handle.net/
#
# Note that this will not alter dc.identifier.uri metadata for existing
# items (only for subsequent submissions).

# CNRI Handle prefix
# (Defaults to the reserved dummy/fake prefix of 123456789)
#handle.prefix = 123456789

#######################
# PROXY CONFIGURATION #
#######################
# Uncomment and specify both properties if proxy server is required for external http requests
# (e.g. requests from DSpace to third party services like Creative Commons use this setting when enabled)
# Use regular hostname without port number
#http.proxy.host =

# port number of proxy server
#http.proxy.port =

##########################
# AUTHENTICATION METHODS #
##########################
# EXAMPLE OVERRIDE:
# Override the default authentication method(s) defined in authentication.cfg
# by defining your own custom ordered list in this local.cfg.
#
# By default, all of these methods are commented out and DSpace will use the
# settings from authentication.cfg. But you may uncomment whichever plugins you
# need in order to change the default settings (or reorder them below).
#
# You may also copy default settings from the corresponding authentication-*.cfg
# configuration file and override them in this local.cfg.

# IP-based authentication/authorization. See authentication-ip.cfg for default configuration.
#plugin.sequence.org.dspace.authenticate.AuthenticationMethod = org.dspace.authenticate.IPAuthentication

# LDAP authentication/authorization. See authentication-ldap.cfg for default configuration.
#plugin.sequence.org.dspace.authenticate.AuthenticationMethod = org.dspace.authenticate.LDAPAuthentication

# OIDC authentication/authorization. See authenication-oidc.cfg for default configuration.
#plugin.sequence.org.dspace.authenticate.AuthenticationMethod = org.dspace.authenticate.OidcAuthentication

# Shibboleth authentication/authorization. See authentication-shibboleth.cfg for default configuration.
# Check also the cors settings below
#plugin.sequence.org.dspace.authenticate.AuthenticationMethod = org.dspace.authenticate.ShibAuthentication

# ORCID certificate authentication.
# plugin.sequence.org.dspace.authenticate.AuthenticationMethod = org.dspace.authenticate.OrcidAuthentication

# X.509 certificate authentication. See authentication-x509.cfg for default configuration.
#plugin.sequence.org.dspace.authenticate.AuthenticationMethod = org.dspace.authenticate.X509Authentication

# Authentication by Password (encrypted in DSpace's database). See authentication-password.cfg for default configuration.
# Enabled by default in authentication.cfg
#plugin.sequence.org.dspace.authenticate.AuthenticationMethod = org.dspace.authenticate.PasswordAuthentication

#####################
# REST API SETTINGS #
#####################
# Allowed Cross-Origin-Resource-Sharing (CORS) origins (in "Access-Control-Allow-Origin" header).
# Only these origins (client URLs) can successfully authenticate with your REST API.
# Defaults to ${dspace.ui.url} if unspecified (as the UI must have access to the REST API).
# Multiple allowed origin URLs may be comma separated. Wildcard value (*) is NOT SUPPORTED.
# (Requires reboot of servlet container, e.g. Tomcat, to reload)
# When an external authentication system is involved like Shibboleth some browsers (i.e. Safari) include
# in the request the Origin header with the url of the IdP. In such case you need to allow also the IdP to
# avoid trouble for such browsers (i.e.  rest.cors.allowed-origins = ${dspace.ui.url}, https://samltest.id )
#rest.cors.allowed-origins = ${dspace.ui.url}

#################################################
# SPRING BOOT SETTINGS (Used by Server Webapp)  #
#################################################
# NOTE: Common Spring Boot application settings may be found at
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
#
# EXAMPLE OVERRIDE:
# By uncommenting the below Spring Boot settings, you can increase or decrease the maximum upload size.
# These defaults are specified in [dspace-src]/dspace-server-webapp/src/main/resources/application.properties
# but may be overridden in this local.cfg
#
# Maximum size of a single uploaded file
#spring.servlet.multipart.max-file-size = 512MB

# Maximum size of a multipart request (i.e. max total size of all files in one request)
#spring.servlet.multipart.max-request-size = 512MB


# Index ####
# Use this to configure the browse indices. Each entry will receive a link in the
# navigation. Each entry can be configured in one of two ways. The first is:
#
# webui.browse.index.<n> = <index name> : metadata : \
        # <schema prefix>.<element>[.<qualifier>|.*] : \
        # (date | title | text) : (asc | desc) : \
        # <sort option name>
#
# This form represent a unique index of metadata values from the item.
#
# (date | title | text | <other>) refers to the datatype of the field.
#                       date: the index type will be treated as a date object
#                       title: the index type will be treated like a title, which will include
#                                       a link to the item page
#                       text: the index type will be treated as plain text.  If single mode is
#                                       specified then this will link to the full mode list
#           <other>: any other datatype will be treated the same as 'text', although
#                   it will apply any custom ordering normalisation configured below
#
#   The two last parts of the configuration are optional, and specifies the default ordering
#   for the index - whether it is ASCending (the default, and best for text indexes), or
#   DESCending (useful for dates - ie. most recent submissions) - and the sort option to use.
#   If you want to define the sort option you must define order as well.
#
#   NOTE: the text to render the index will use the <index name> parameter to select
#   the message key from Messages.properties using a key of the form:
#
# browse.type.metadata.<index name>
#
# The other form is for indexes of the items themselves, ie. each entry will be displayed
# according to the configuration of by webui.itemlist.columns:
#
# webui.browse.index.<n> = <index name> : item : <sort option name> : (asc | desc)
#
# sort option name: this is the sorting to be applied to the display. It must match the
#                   name given to one of the webui.itemlist.sort-option entries given below.
#
#   The final part of the configuration is optional, and specifies the default ordering
#   for the index - whether it is ASCending (the default, and best for text indexes), or
#   DESCending (useful for dates - ie. most recent submissions)

#   NOTE: the text to render the index will use the <sort option name> parameter to select
#   the message key from the UI language packs key of the form:
#
# browse.metadata.<sort option name>
#
# Note: the index numbers <n> must start from 1 and increment continuously by 1
# thereafter.  Deviation from this will cause an error during install or
# configuration update
#
# Note #2: When specifying multiple metadata fields in one index, please
# separate them with an ESCAPED comma (\,). Commas which are unescaped will
# result in "Browse Index configuration is not valid" errors.
#
# For compatibility with previous versions:
#

webui.browse.index.1 = datecreated:item:datecreated
webui.browse.index.2 = author:metadata:dc.contributor.*\,dc.creator:text
webui.browse.index.3 = title:item:title
webui.browse.index.4 = subject:metadata:dc.subject.mesh:valueList
webui.browse.index.5 = tag:metadata:dc.subject:valueList
webui.browse.index.6 = type:metadata:dspace.entity.type:valueList
webui.browse.index.7 = vocab:metadata:dc.subject.other:valueList
# webui.browse.index.8 = specs:metadata:dc.subject:valueList
# webui.browse.index.6 = relation:metadata:dc.relation:valueList

## example of authority-controlled browse category - see authority control config
#webui.browse.index.5 = lcAuthor:metadataAuthority:dc.contributor.author:authority

# By default, browse hierarchical indexes are created based on the used controlled
# vocabularies in the submission forms. These could be disabled adding the name of
# the vocabularies to exclude in this comma-separated property.
# (Requires reboot of servlet container, e.g. Tomcat, to reload)
webui.browse.vocabularies.disabled = srsc,dc_subject_other,dc_subject_mesh

# Enable/Disable tag cloud in browsing.
# webui.browse.index.tagcloud.<n> = true | false
# where n is the index number from the above options
# Default value is false. If no option exists for a specific index, it is assumed to be false.
# Changes to this option do NOT require re-indexing of discovery.
# TODO: UNSUPPORTED IN DSpace 7.0
#webui.browse.index.tagcloud.4 = true

# Set the options for what can be sorted by
#
# Sort options will be available when browsing a list of items (i.e. an 'item' browse,
# or search results).  You can define an arbitrary number of fields
# to sort on, irrespective of which fields you display using webui.itemlist.columns
#
# the format is:
#
# webui.itemlist.sort-option.<n> = <option name> : \
#                                                                       <schema prefix>.<element>[.<qualifier>|.*] : \
#                                                                       (date | text | ...) : (show | hide)
#
# This is defined much the same as above.  The parameter after the metadata
# just lets the sorter know which normalisation to use - standard normalisations are title,
# text or date - however additional normalisations can be defined using the PluginService.
#
# The final parts of the configuration is optional -  whether to SHOW (the default) or
# HIDE the option from the sorting controls in the user interface. This can be useful if
# you need to define a specific date sort for use by the recent items lists,
# but otherwise don't want users to choose that option.
#
# webui.itemlist.sort-option.1 = title:dc.title:title
# webui.itemlist.sort-option.2 = dateissued:dc.date.issued:date
# webui.itemlist.sort-option.3 = dateaccessioned:dc.date.accessioned:date

# Set the options for how the indexes are sorted
#
# All sorts of normalisations are carried out by the OrderFormatDelegate.
# The plugin manager can be used to specify your own delegates for each datatype.
#
# The default datatypes (and delegates) are:
#
# author = org.dspace.sort.OrderFormatAuthor
# title  = org.dspace.sort.OrderFormatTitle
# text   = org.dspace.sort.OrderFormatText
#
# If you redefine a default datatype here, the configuration will be used in preference
# to the default, however, if you do not explicitly redefine a datatype, then the
# default will still be used in addition to the datatypes you do specify.
#
# The multi-lingual MARC 21 title ordering is configured as default.
# To use the previous title ordering, comment out the configuration below

# plugin.named.org.dspace.sort.OrderFormatDelegate= \
#         org.dspace.sort.OrderFormatTitleMarc21=title

# which fields should link to other browse listings.  This should associated
# the name of one of the above browse indices with a metadata field listed
# in <webui.itemlist.columns> above.  The form is:
#
# webui.browse.link.<n> = <index name>:<display column metadata>
#
# Note that cross linking will only work for fields other than title.
#
# The effect this has is to create links to browse views for the item clicked on.
# If it is a "single" type, it will link to a view of all the items which share
# that metadata element in common (i.e. all the papers by a single author).  If
# it is a "full" type, it will link to a view of the standard full browse page,
# starting with the value of the link clicked on.
#
# The default below defines the authors to link to other publications by that author
webui.browse.link.2 = subject:dc.subject.mesh
webui.browse.link.3 = type:dspace.entity.type
webui.browse.link.4 = author:dc.contributor.*
webui.browse.link.5 = vocab:dc.subject.other
webui.browse.link.6 = tag:dc.subject
# webui.browse.link.7 = specs:dc.subject
# webui.browse.link.5 = relation:dc.relation.*

########################
#  LDN INBOX SETTINGS  #
########################
ldn.enabled = true